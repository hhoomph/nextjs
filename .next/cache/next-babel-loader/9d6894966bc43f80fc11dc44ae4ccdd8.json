{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\Programs\\\\Programing Code\\\\GithubDesktop\\\\nextjs\\\\components\\\\Nav\\\\Search.js\";\nimport React, { useState, useEffect, useRef, memo } from 'react';\nimport { FaSearch } from 'react-icons/fa';\n\nvar Search = function Search() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      search = _useState2[0],\n      setSearch = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      searchFocus = _useState4[0],\n      setSearchFocus = _useState4[1];\n\n  var searchInput = useRef();\n  var searchInlineClass = searchFocus ? 'search_inline search_inline_focus' : 'search_inline search_inline_blur';\n\n  var inputFocus = function inputFocus() {\n    setSearchFocus(true);\n  };\n\n  var inputBlur = function inputBlur() {\n    if (searchInput.current.value.length > 0) {} else {\n      setSearchFocus(false);\n    }\n  };\n\n  return React.createElement(\"form\", {\n    className: \"inline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"top_search text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"\\u062C\\u0633\\u062A\\u062C\\u0648\",\n    className: \"form-control mr-sm-2 text-right search_input\",\n    onFocus: function onFocus() {\n      inputFocus();\n    },\n    onBlur: function onBlur() {\n      inputBlur();\n    },\n    ref: searchInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: searchInlineClass,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(FaSearch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }))));\n};\n\nexport default memo(Search);","map":{"version":3,"sources":["E:\\Programs\\Programing Code\\GithubDesktop\\nextjs\\components\\Nav\\Search.js"],"names":["React","useState","useEffect","useRef","memo","FaSearch","Search","search","setSearch","searchFocus","setSearchFocus","searchInput","searchInlineClass","inputFocus","inputBlur","current","value","length"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,EAA6CC,IAA7C,QAAyD,OAAzD;AACA,SAASC,QAAT,QAAyB,gBAAzB;;AACA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AAAA,kBACSL,QAAQ,CAAC,EAAD,CADjB;AAAA;AAAA,MACZM,MADY;AAAA,MACJC,SADI;;AAAA,mBAEmBP,QAAQ,CAAC,KAAD,CAF3B;AAAA;AAAA,MAEZQ,WAFY;AAAA,MAECC,cAFD;;AAGnB,MAAIC,WAAW,GAAGR,MAAM,EAAxB;AACA,MAAMS,iBAAiB,GAAGH,WAAW,GAAG,mCAAH,GAAyC,kCAA9E;;AACA,MAAMI,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvBH,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD,GAFD;;AAGA,MAAMI,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,QAAIH,WAAW,CAACI,OAAZ,CAAoBC,KAApB,CAA0BC,MAA1B,GAAmC,CAAvC,EAA0C,CACzC,CADD,MACO;AACLP,MAAAA,cAAc,CAAC,KAAD,CAAd;AACD;AACF,GALD;;AAMA,SACE;AAAM,IAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,gCAFd;AAGE,IAAA,SAAS,EAAC,8CAHZ;AAIE,IAAA,OAAO,EAAE,mBAAM;AACbG,MAAAA,UAAU;AACX,KANH;AAOE,IAAA,MAAM,EAAE,kBAAM;AACZC,MAAAA,SAAS;AACV,KATH;AAUE,IAAA,GAAG,EAAEH,WAVP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAaE;AAAK,IAAA,SAAS,EAAEC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAbF,CADF,CADF;AAqBD,CAnCD;;AAoCA,eAAeR,IAAI,CAACE,MAAD,CAAnB","sourcesContent":["import React, { useState, useEffect, useRef, memo } from 'react';\r\nimport { FaSearch } from 'react-icons/fa';\r\nconst Search = () => {\r\n  const [search, setSearch] = useState('');\r\n  const [searchFocus, setSearchFocus] = useState(false);\r\n  let searchInput = useRef();\r\n  const searchInlineClass = searchFocus ? 'search_inline search_inline_focus' : 'search_inline search_inline_blur';\r\n  const inputFocus = () => {\r\n    setSearchFocus(true);\r\n  };\r\n  const inputBlur = () => {\r\n    if (searchInput.current.value.length > 0) {\r\n    } else {\r\n      setSearchFocus(false);\r\n    }\r\n  };\r\n  return (\r\n    <form className=\"inline\">\r\n      <div className=\"top_search text-center\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"جستجو\"\r\n          className=\"form-control mr-sm-2 text-right search_input\"\r\n          onFocus={() => {\r\n            inputFocus();\r\n          }}\r\n          onBlur={() => {\r\n            inputBlur();\r\n          }}\r\n          ref={searchInput}\r\n        />\r\n        <div className={searchInlineClass}>\r\n          <FaSearch />\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nexport default memo(Search);"]},"metadata":{},"sourceType":"module"}