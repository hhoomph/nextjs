{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"E:\\\\Programs\\\\Programing Code\\\\GithubDesktop\\\\nextjs\\\\components\\\\Link.js\";\nimport React from 'react';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nexport default (function (_ref) {\n  var children = _ref.children,\n      props = _objectWithoutProperties(_ref, [\"children\"]);\n\n  var router = useRouter();\n  var child = React.Children.only(children);\n  var className = child.props.className || ''; // add active class to className of the Link first children (a tag in common)\n\n  if (router.pathname === props.href) {\n    className = \"\".concat(className, \" active\").trim();\n  }\n\n  return React.createElement(Link, _extends({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }), React.cloneElement(child, {\n    className: className\n  }));\n});","map":{"version":3,"sources":["E:\\Programs\\Programing Code\\GithubDesktop\\nextjs\\components\\Link.js"],"names":["React","Link","useRouter","children","props","router","child","Children","only","className","pathname","href","trim","cloneElement"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,gBAAe,gBAA4B;AAAA,MAAzBC,QAAyB,QAAzBA,QAAyB;AAAA,MAAZC,KAAY;;AACzC,MAAMC,MAAM,GAAGH,SAAS,EAAxB;AACA,MAAMI,KAAK,GAAGN,KAAK,CAACO,QAAN,CAAeC,IAAf,CAAoBL,QAApB,CAAd;AACA,MAAIM,SAAS,GAAGH,KAAK,CAACF,KAAN,CAAYK,SAAZ,IAAyB,EAAzC,CAHyC,CAIzC;;AACA,MAAIJ,MAAM,CAACK,QAAP,KAAoBN,KAAK,CAACO,IAA9B,EAAoC;AAClCF,IAAAA,SAAS,GAAG,UAAGA,SAAH,aAAsBG,IAAtB,EAAZ;AACD;;AACD,SAAO,oBAAC,IAAD,eAAUR,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAkBJ,KAAK,CAACa,YAAN,CAAmBP,KAAnB,EAA0B;AAAEG,IAAAA,SAAS,EAATA;AAAF,GAA1B,CAAlB,CAAP;AACD,CATD","sourcesContent":["import React from 'react';\r\nimport Link from 'next/link';\r\nimport { useRouter } from 'next/router';\r\nexport default ({ children, ...props }) => {\r\n  const router = useRouter();\r\n  const child = React.Children.only(children);\r\n  let className = child.props.className || '';\r\n  // add active class to className of the Link first children (a tag in common)\r\n  if (router.pathname === props.href) {\r\n    className = `${className} active`.trim();\r\n  }\r\n  return <Link {...props}>{React.cloneElement(child, { className })}</Link>;\r\n};"]},"metadata":{},"sourceType":"module"}